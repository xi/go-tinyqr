package qrcode

type group struct {
	numBlocks        int
	numCodewords     int
	numDataCodewords int
}

type version struct {
	version                int
	groups                 []group
	numRemainderBits       int
	alignmentPatternCenter []int
	bitSequence            uint32
}

func (v version) numDataBits() int {
	numDataBits := 0
	for _, g := range v.groups {
		numDataBits += 8 * g.numBlocks * g.numDataCodewords
	}
	return numDataBits
}

func (v version) bitmapSize() int {
	return 17 + v.version*4
}

var versions = []version{
	{
		1,
		[]group{
			{1, 26, 19},
		},
		0,
		[]int{},
		0x00000,
	},
	{
		2,
		[]group{
			{1, 44, 34},
		},
		7,
		[]int{6, 18},
		0x00000,
	},
	{
		3,
		[]group{
			{1, 70, 55},
		},
		7,
		[]int{6, 22},
		0x00000,
	},
	{
		4,
		[]group{
			{1, 100, 80},
		},
		7,
		[]int{6, 26},
		0x00000,
	},
	{
		5,
		[]group{
			{1, 134, 108},
		},
		7,
		[]int{6, 30},
		0x00000,
	},
	{
		6,
		[]group{
			{2, 86, 68},
		},
		7,
		[]int{6, 34},
		0x00000,
	},
	{
		7,
		[]group{
			{2, 98, 78},
		},
		0,
		[]int{6, 22, 38},
		0x07c94,
	},
	{
		8,
		[]group{
			{2, 121, 97},
		},
		0,
		[]int{6, 24, 42},
		0x085bc,
	},
	{
		9,
		[]group{
			{2, 146, 116},
		},
		0,
		[]int{6, 26, 46},
		0x09a99,
	},
	{
		10,
		[]group{
			{2, 86, 68},
			{2, 87, 69},
		},
		0,
		[]int{6, 28, 50},
		0x0a4d3,
	},
	{
		11,
		[]group{
			{4, 101, 81},
		},
		0,
		[]int{6, 30, 54},
		0x0bbf6,
	},
	{
		12,
		[]group{
			{2, 116, 92},
			{2, 117, 93},
		},
		0,
		[]int{6, 32, 58},
		0x0c762,
	},
	{
		13,
		[]group{
			{4, 133, 107},
		},
		0,
		[]int{6, 34, 62},
		0x0d847,
	},
	{
		14,
		[]group{
			{3, 145, 115},
			{1, 146, 116},
		},
		3,
		[]int{6, 26, 46, 66},
		0x0e60d,
	},
	{
		15,
		[]group{
			{5, 109, 87},
			{1, 110, 88},
		},
		3,
		[]int{6, 26, 48, 70},
		0x0f928,
	},
	{
		16,
		[]group{
			{5, 122, 98},
			{1, 123, 99},
		},
		3,
		[]int{6, 26, 50, 74},
		0x10b78,
	},
	{
		17,
		[]group{
			{1, 135, 107},
			{5, 136, 108},
		},
		3,
		[]int{6, 30, 54, 78},
		0x1145d,
	},
	{
		18,
		[]group{
			{5, 150, 120},
			{1, 151, 121},
		},
		3,
		[]int{6, 30, 56, 82},
		0x12a17,
	},
	{
		19,
		[]group{
			{3, 141, 113},
			{4, 142, 114},
		},
		3,
		[]int{6, 30, 58, 86},
		0x13532,
	},
	{
		20,
		[]group{
			{3, 135, 107},
			{5, 136, 108},
		},
		3,
		[]int{6, 34, 62, 90},
		0x149a6,
	},
	{
		21,
		[]group{
			{4, 144, 116},
			{4, 145, 117},
		}, 4,
		[]int{6, 28, 50, 72, 94},
		0x15683,
	}, {
		22,
		[]group{
			{2, 139, 111},
			{7, 140, 112},
		}, 4,
		[]int{6, 26, 50, 74, 98},
		0x168c9,
	}, {
		23,
		[]group{
			{4, 151, 121},
			{5, 152, 122},
		}, 4,
		[]int{6, 30, 54, 78, 102},
		0x177ec,
	}, {
		24,
		[]group{
			{6, 147, 117},
			{4, 148, 118},
		}, 4,
		[]int{6, 28, 54, 80, 106},
		0x18ec4,
	}, {
		25,
		[]group{
			{8, 132, 106},
			{4, 133, 107},
		}, 4,
		[]int{6, 32, 58, 84, 110},
		0x191e1,
	}, {
		26,
		[]group{
			{0, 142, 114},
			{2, 143, 115},
		}, 4,
		[]int{6, 30, 58, 86, 114},
		0x1afab,
	}, {
		27,
		[]group{
			{8, 152, 122},
			{4, 153, 123},
		}, 4,
		[]int{6, 34, 62, 90, 118},
		0x1b08e,
	}, {
		28,
		[]group{
			{3, 147, 117},
			{10, 148, 118},
		}, 3,
		[]int{6, 26, 50, 74, 98, 122},
		0x1cc1a,
	}, {
		29,
		[]group{
			{7, 146, 116},
			{7, 147, 117},
		}, 3,
		[]int{6, 30, 54, 78, 102, 126},
		0x1d33f,
	}, {
		30,
		[]group{
			{5, 145, 115},
			{10, 146, 116},
		}, 3,
		[]int{6, 26, 52, 78, 104, 130},
		0x1ed75,
	}, {
		31,
		[]group{
			{13, 145, 115},
			{3, 146, 116},
		}, 3,
		[]int{6, 30, 56, 82, 108, 134},
		0x1f250,
	}, {
		32,
		[]group{
			{17, 145, 115},
		}, 3,
		[]int{6, 34, 60, 86, 112, 138},
		0x209d5,
	}, {
		33,
		[]group{
			{17, 145, 115},
			{1, 146, 116},
		}, 3,
		[]int{6, 30, 58, 86, 114, 142},
		0x216f0,
	}, {
		34,
		[]group{
			{13, 145, 115},
			{6, 146, 116},
		}, 3,
		[]int{6, 34, 62, 90, 118, 146},
		0x228ba,
	}, {
		35,
		[]group{
			{12, 151, 121},
			{7, 152, 122},
		}, 0,
		[]int{6, 30, 54, 78, 102, 126, 150},
		0x2379f,
	}, {
		36,
		[]group{
			{6, 151, 121},
			{14, 152, 122},
		}, 0,
		[]int{6, 24, 50, 76, 102, 128, 154},
		0x24b0b,
	}, {
		37,
		[]group{
			{17, 152, 122},
			{4, 153, 123},
		}, 0,
		[]int{6, 28, 54, 80, 106, 132, 158},
		0x2542e,
	}, {
		38,
		[]group{
			{4, 152, 122},
			{18, 153, 123},
		}, 0,
		[]int{6, 32, 58, 84, 110, 136, 162},
		0x26a64,
	}, {
		39,
		[]group{
			{20, 147, 117},
			{4, 148, 118},
		}, 0,
		[]int{6, 26, 54, 82, 110, 138, 166},
		0x27541,
	}, {
		40,
		[]group{
			{19, 148, 118},
			{6, 149, 119},
		}, 0,
		[]int{6, 30, 58, 86, 114, 142, 170},
		0x28c69,
	},
}
